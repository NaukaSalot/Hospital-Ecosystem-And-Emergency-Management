/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HomePersonRole;

//import Business.PatientDirectory;
//import Business.PatientDetails;
//import Business.PatientDetails;
//import Business.PatientDirectory;
//import Business.PersonDetails;
import Business.PersonVitalSigns.PersonVitalSignHistory;
import Business.PersonVitalSigns.PersonVitalSigns;
//import Business.VitalSign;
//import Business.VitalSignHistory;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nauka Salot
 */
public class View extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    // private PatientDirectory patientDirectory;
    private PersonVitalSignHistory personvitalsignhistory;
    //private PatientDetails patientdetails;
    //private PersonDetails persondetails;

    /**
     * Creates new form ViewVitalSignJPanel
     */
    public View(JPanel userProcessContainer, PersonVitalSignHistory personvitalsignhistory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.personvitalsignhistory = personvitalsignhistory;

        refreshTable();
    }

    public void refreshTable() {
        DefaultTableModel dtm = (DefaultTableModel) accountTable.getModel();
        dtm.setRowCount(0);
        for (PersonVitalSigns pvs : personvitalsignhistory.getVitalsignlist()) {

            {
                Object[] row = new Object[5];
                row[0] = pvs;
                row[1] = pvs.getHeartrate();
                row[2] = pvs.getBloodpressure();
                //row[3] = pvs.get();
                row[3] = pvs.getAge();
                row[4] = checkNormality(pvs);

                dtm.addRow(row);
            }

        }
    }

    public String checkNormality(PersonVitalSigns vs) {

        if ((vs.getAge() >= 1 && vs.getAge() <= 3) && (vs.getRespiratoryrate() >= 20 && vs.getRespiratoryrate() <= 30) && (vs.getHeartrate() >= 80 && vs.getHeartrate() <= 130) && (vs.getBloodpressure() >= 80 && vs.getBloodpressure() <= 110)) {
            return "Normal";
        } else if ((vs.getAge() >= 4 && vs.getAge() <= 5) && (vs.getRespiratoryrate() >= 20 && vs.getRespiratoryrate() <= 30) && (vs.getHeartrate() >= 80 && vs.getHeartrate() <= 120) && (vs.getBloodpressure() >= 80 && vs.getBloodpressure() <= 110)) {
            return "Normal";
        } else if ((vs.getAge() >= 6 && vs.getAge() <= 12) && (vs.getRespiratoryrate() >= 20 && vs.getRespiratoryrate() <= 30) && (vs.getHeartrate() >= 70 && vs.getHeartrate() <= 110) && (vs.getBloodpressure() >= 80 && vs.getBloodpressure() <= 120)) {
            return "Normal";
        } else if ((vs.getAge() >= 13) && (vs.getRespiratoryrate() >= 12 && vs.getRespiratoryrate() <= 20) && (vs.getHeartrate() >= 55 && vs.getHeartrate() <= 105) && (vs.getBloodpressure() >= 110 && vs.getBloodpressure() <= 120)) {
            return "Normal";
        } else {
            return "Abnormal";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        btnback = new javax.swing.JButton();

        accountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Respiratory Rate", "Heart Rate", "Blood Pressure", "Age", "Condition"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(accountTable);
        if (accountTable.getColumnModel().getColumnCount() > 0) {
            accountTable.getColumnModel().getColumn(0).setResizable(false);
            accountTable.getColumnModel().getColumn(1).setResizable(false);
            accountTable.getColumnModel().getColumn(2).setResizable(false);
            accountTable.getColumnModel().getColumn(3).setResizable(false);
            accountTable.getColumnModel().getColumn(4).setResizable(false);
        }

        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/1449546840_restart-1.png"))); // NOI18N
        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnback)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(btnback)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountTable;
    private javax.swing.JButton btnback;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
