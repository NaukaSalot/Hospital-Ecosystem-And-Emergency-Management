/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Ambulance;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.ReceptionistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmbulanceWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class AmbulanceProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    AmbulanceWorkRequest request;
    EcoSystem business;
    UserAccount account;

    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public AmbulanceProcessWorkRequestJPanel(JPanel userProcessContainer, AmbulanceWorkRequest request, EcoSystem business, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.business = business;
        this.account = account;
        //populatecombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtcomment = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtpersonname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        submitJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/1449545183_floppy.png"))); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Comment");

        txtcomment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcommentActionPerformed(evt);
            }
        });

        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/1449546840_restart-1.png"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("enter the nearest hospital");

        jLabel4.setText("enter the patient name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(backJButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitJButton)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtpersonname)
                    .addComponent(txtcomment, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(backJButton)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtcomment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtpersonname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(submitJButton)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AmbulanceWorkAreaJPanel awajp = (AmbulanceWorkAreaJPanel) component;
        awajp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        String name = txtcomment.getText();
        String pname = txtpersonname.getText();
        AmbulanceWorkRequest awr = new AmbulanceWorkRequest();
        awr.setComment(name);
        awr.setSender(account);
        awr.setStatus("Completed");
        awr.setPersonName(pname);
        awr.setResolveDate(new Date());

        if (txtcomment.getText().equalsIgnoreCase("hospital")) {
            for (Network n : business.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e instanceof HospitalEnterprise) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            if (o instanceof ReceptionistOrganization) {

                                o.getWorkQueue().getWorkRequestList().add(awr);
                                account.getWorkQueue().getWorkRequestList().add(awr);
                            }

//                            for (Network nw : business.getNetworkList()) {
//                                for (Enterprise et : n.getEnterpriseDirectory().getEnterpriseList()) {
//                                    if (et instanceof GovernmentEnterprise) {
//                                        for (Organization org : et.getOrganizationDirectory().getOrganizationList()) {
//                                            if (org instanceof GovernmentOrganization) {
//
//                                                org.getWorkQueue().getWorkRequestList().add(awr);
//                                                account.getWorkQueue().getWorkRequestList().add(awr);
//                                            }}}}}
//               String name = txtcomment.getText();  //commented here
//
//        if (name.equalsIgnoreCase("hospital"))
//        {
//        populatecombobox();
//       // Employee e=(Employee)cmbrecep.getSelectedItem();
//        
//        UserAccount ua= (UserAccount)cmbrecep.getSelectedItem();
//        AmbulanceWorkRequest awr=new  AmbulanceWorkRequest();
//      
//       // e.setAmbulanceWorkRequest(awr);
//        awr.setSender(account);
//        awr.setReceiver(ua);
//        awr.setComment(txtcomment.getText());
//        awr.setPersonName(txtpersonname.getText());
//        //awr.setPersonName(jTextField1.getText());
//        awr.setMessage("Completed");
//        account.getWorkQueue().getWorkRequestList().add(awr);
//        JOptionPane.showMessageDialog(null, "Message processed");}
//        else
//        {
//            AmbulanceWorkRequest awr=new  AmbulanceWorkRequest();
//      
//       // e.setAmbulanceWorkRequest(awr);
//        awr.setSender(account);
//        //awr.setReceiver(ua);
//        awr.setComment(txtcomment.getText());
//        awr.setPersonName(txtpersonname.getText());
//        //awr.setPersonName(jTextField1.getText());
//        awr.setMessage("Completed");
//        account.getWorkQueue().getWorkRequestList().add(awr);
//        JOptionPane.showMessageDialog(null, "Message processed");
//        }
//
                        }
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Message processed");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void txtcommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcommentActionPerformed
        // TODO add your handling code here:
        if (txtcomment.getText().equalsIgnoreCase("hospital")) {
            // populatecombobox();
        }
    }//GEN-LAST:event_txtcommentActionPerformed

//    public void populatecombobox() {
//        String name = txtcomment.getText();
//        cmbrecep.removeAllItems();
//        if (name.equalsIgnoreCase("hospital")) {
//            for (Network n : business.getNetworkList()) {
//                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
//                    if (e instanceof HospitalEnterprise) {
//                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
//                            if (o instanceof ReceptionistOrganization || o instanceof GovernmentOrganization) {
//
//                                for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
//                                    cmbrecep.addItem(ua);
//                                }
//
//                            }
//                        }
//                    }
//                }
//            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Message processed");
//            return;
//        }
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtcomment;
    private javax.swing.JTextField txtpersonname;
    // End of variables declaration//GEN-END:variables
}
